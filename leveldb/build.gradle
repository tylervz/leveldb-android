apply plugin: 'com.android.library'

def gitVersion = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }

    return stdout.toString().trim()
}

def GIT_VERSION = gitVersion()
def MAIN_VERSION = GIT_VERSION.replaceFirst(/-[a-z0A-Z-9]+$/, '')
def VERSION = GIT_VERSION.replaceFirst(/^leveldb-android-/, '')
def LEVELDB_VERSION = VERSION.replaceFirst(/[.][0-9]+(-.+)?$/, '')

System.out.println "VERSION: ${VERSION}"
System.out.println "GIT_VERSION: ${GIT_VERSION}"
System.out.println "MAIN_VERSION: ${MAIN_VERSION}"
System.out.println "LEVELDB_VERSION: ${LEVELDB_VERSION}"

group 'com.github.hf'
version VERSION

// TODO: if we want to publish to a Maven repository, we can follow this guide.
// https://developer.android.com/studio/build/maven-publish-plugin
// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.github.hf'
                artifactId = 'leveldb'
                version = VERSION

                pom {
                    name = 'leveldb'
                    description = 'LevelDB bindings for Android.'
                    url = 'https://github.com/hf/leveldb-android'
                    // Not sure if this key is supported or not
                    // inceptionYear '2014'

                    licenses {
                        license {
                            name = 'BSD 3-Clause'
                            url = 'https://github.com/hf/leveldb-android/blob/master/LICENSE.txt'
                            distribution = 'repo'
                        }
                    }
                    developers {
                        developer {
                            name = 'Stojan Dimitrovski'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/hf/leveldb-android.git'
                        developerConnection = 'scm:git:ssh://github.com/hf/leveldb-android.git'
                        url = 'https://github.com/hf/leveldb-android'
                    }
                }
            }
            // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                groupId = 'com.github.hf'
                artifactId = 'leveldb-debug'
                version = VERSION
            }
        }
    }
}

//bintray {
//    user = System.getenv('BINTRAY_USER')
//    key  = System.getenv('BINTRAY_KEY')
//
//    configurations = ['archives']
//
//    pkg {
//        repo = 'android'
//        name = 'leveldb-android'
//        licenses = ['BSD 3-Clause']
//        vcsUrl = 'https://github.com/hf/leveldb-android.git'
//
//        userOrg = user
//
//        websiteUrl = 'https://github.com/hf/leveldb-android'
//        issueTrackerUrl = 'https://github.com/hf/leveldb-android'
//
//        githubRepo = 'hf/leveldb-android'
//        githubReleaseNotesFile = 'README.md'
//
//        version {
//            name = VERSION
//            desc = "LevelDB (${LEVELDB_VERSION}) for Android."
//            released = new Date()
//            vcsTag = MAIN_VERSION
//        }
//    }
//}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testHandleProfiling true
        testFunctionalTest true

        externalNativeBuild {
            cmake {
                cppFlags "-fno-rtti"
            }
        }

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            moduleName "leveldb"
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
    }
    externalNativeBuild {
        cmake {
            version "3.10.2"
            path "CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'com.google.truth:truth:0.42'
    androidTestImplementation 'commons-io:commons-io:2.6'


    testImplementation 'junit:junit:4.12'
}